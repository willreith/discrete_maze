function [out] = compute_grid_score(autocorr_inp, type, grid_corr_r)
% computes grid score
% The Langston method implementation is adapted using Roddy Grieves' code 
%   OUTPUT:
%   g = grid score
%   gdata = structure containing more detailed info
%         gdata.central_peak = central peak location [x,y]
%         gdata.near_peaks = surrounding 6 peak locations [x,y]
%         gdata.near_peaks_d = median distance to surrounding peaks
%         gdata.central_ring = autocorrelogram image cut to central fields (with middle removed)
%         gdata.orientation = the angle/orientation of the grid
%         gdata.g_score = grid score


out = struct;

if strcmp(type, 'langston')

    rad_steps = 0.45; % amount by which to increase radii each step

    % clean autocorr and get individual peaks 
    autocorr_inp_clean = autocorr_inp;

    col_len = size(autocorr_inp, 2);
    row_len = size(autocorr_inp, 1);

    % define central peak 
    autocorr_inp_clean(isnan(autocorr_inp) | isinf(autocorr_inp)) = 0; 
    autocorr_inp_clean(autocorr_inp < grid_corr_r) = 0;                                         % remove low correlations - ??? thought this was only done to define central peak, and 0.3 seems high? 
    autocorr_reg_out = regionprops(logical(autocorr_inp_clean),'Centroid','EquivDiameter');     % find centre and diametre

    foo = cell2mat({autocorr_reg_out.Centroid}.'); if isempty(foo), return, end
 
    mid_point = [col_len/2, row_len/2]; 
    eu_dist   = sqrt(sum((foo-mid_point).^2,2)); 
    [~,mindx] = nanmin(eu_dist); % closest peak to real centre

    center_peak = autocorr_reg_out(mindx).Centroid;         % set central peak 
    r_wid       = autocorr_reg_out(mindx).EquivDiameter/2;  % radius of central peak 
    min_dist    = r_wid*1.5;
    
    % compute distance of each circular sample from centre of central peak
    dist_mat = zeros(size(autocorr_inp)); 
    dist_mat(ceil(center_peak(2)),ceil(center_peak(1))) = 1;     
    dist_mat = bwdist(dist_mat); 
    indiv_dist = min_dist:rad_steps:((max(size(autocorr_inp))/2)-r_wid); if isempty(indiv_dist), return, end

    % rotate samples and correlate with original version
    angles = 30:30:150; 
    gscores_dist = nan(size(indiv_dist)); 
    for e = 1:length(indiv_dist) % for every distance we want to test
        foo = autocorr_inp;
        foo((dist_mat<(indiv_dist(e)-r_wid))|(dist_mat>(indiv_dist(e)+r_wid))) = nan; % ---- need to also exclude central peak from correlation?
        foo(logical(autocorr_inp_clean)) = nan;
        curr_r = grid_score_corr(foo, angles);
        gscores_dist(e) = curr_r;
    end

    [g_score,dindx]       = nanmax(gscores_dist); 

    out.g_score      = g_score;
    out.autocorr_rad = r_wid;
    out.mid_peak     = center_peak;

elseif strcmp(type, 'basic') % uses basic rotational correlation to define gridness (e.g. soman 2017)

        angles = 30:30:150;
        out.g_score = grid_score_corr(autocorr_inp, angles);          
end

%{
https://www.pnas.org/doi/10.1073/pnas.1701352114
To label neurons as grid cells, we used the 95th percentile of gridness and 
information rate for each unit from a shuffled distribution of spikes as 
the threshold together with a minimum gridness score of 0.2. Shortly after 
NSi cells were inhibited, grid cells showed consistent, robust excitatory 
responses with an average peak response of 8 ms after stimulation onset


+
https://www.science.org/doi/10.1126/sciadv.abd5684
Gridness score
For each rate map, a gridness score was calculated by first masking the 
central peak with a disc having a radius of half the distance to the 
closest peak found among six surrounding peaks. Furthermore, the area of 
the autocorrelogram outside a disc centered on the center peak was masked 
with a radius 3/2 times the distance to the outermost of the six closest 
peaks. Next, the masked autocorrelogram was rotated by increments of 30° 
up to 150°. For each rotation, we calculated the Pearson product moment 
correlation coefficient against the originally masked autocorrelogram. 
Last, the gridness score was calculated by taking the lowest coefficient 
found with rotations 60 and 120 and subtracting the highest coefficient 
found with rotations 30, 90, and 150.

Shuffling
Null distributions of gridness and spatial information were generated by a 
randomized spike train for each registration using the function 
spike_train_surrogates.dither_spike_train from the Elephant 
electrophysiology analysis toolkit (neuralensemble.org/elephant). For each 
session, n = 1000 randomized spike trains were generated using a shift of 
30 s with edges = True.

Spatial shift
To compute the shift of fields of the rate map, we computed the 
cross-correlation created by correlating the smoothed rate maps using the 
scipy.signal.fftconvolve function from the SciPy package with the mode 
parameter set to mode = ´full´. The spatial shift was then given by the 
center of mass of the cross-correlogram.

Identification of firing fields
To estimate the firing within and outside fields, we first identified the 
individual fields in the rate map. Following the protocol of (73), we first
identified a global field radius as 0.7 times half the distance from the 
center peak to the closest peak in the autocorrelogram. Next, we identified
all the peaks in the rate map before excluding the lower of any two peaks 
within a distance shorter than the global field radius.

To define the extent of each field, we first used morphological dilation to
 enlarge bright regions and shrink dark regions using 
skimage.morphology.dilation from the package scikit-image (74). To extract 
the boundaries of fields in the dilated image, we further used a Laplace 
filter using Gaussian second derivatives. The Laplacian of Gaussian was 
calculated using the ndimage.gaussian_laplace with sigma = 2.5 function 
from the SciPy Python package (75).
To separate and label the remaining regions, we used the ndimage.label 
function. Any regions with an area less than nine bins were excluded. The 
areas were then sorted on the basis of the mean firing rate in each area.
Fields were defined to be any labeled region found that corresponded with a
 non-excluded peak from the protocol of (73). The fields were used in 
subsequent analyses to identify in- and out-field spikes.

Spatial information and specificity
Spatial information is an estimate of to which degree the animal’s position
can be predicted on the basis of the firing of the cell, given in bits per
second (14). Spatial information was found using the following equation
where pi is the probability of the animal being in bin i, given by the 
occupancy map divided by the total session time; i is the firing rate in 
bin i; and is the mean firing rate. Spatial information specificity was 
calculated from spatial information divided by average rate.

https://barry-lab.com/wp-content/uploads/2018/12/Barry-Burgess-2017-To-be-
a-Grid-Cell-Shuffling-procedures-for-determining-Gridness.pdf

https://www.frontiersin.org/articles/10.3389/fncom.2017.00065/full
We first computed the cell's rate map by summing its activity within the 
binned (size = 10) 2-dimensional representation of the explored path and 
normalized it by the occupancy of each spatial bin. Next, we generated the 
autocorrelogram of each cell by auto-correlating its 2- dimensional rate 
map (Figure 1F, left column). We then applied a progressive rotation of 3° 
to the cell's autocorrelogram and correlated it with the original 
zero-rotation autocorrelogram. In the case of truly symmetrical grid cells,
an oscillatory correlation signal would be generated with peaks at 60° and
120° and troughs at 30°, 90°, and 150° (Figure 1F, right column). The 
gridness score is then obtained by subtracting the correlation at the 
expected peaks and the expected troughs of the rotational correlation 
(Sargolini et al., 2006).

https://www.nature.com/articles/s41467-019-13760-8#Sec7


https://elifesciences.org/articles/10094

https://journals.physiology.org/doi/full/10.1152/jn.00699.2015
Langston et al. (2010) used a different method to calculate grid scores for
poorly defined grid cells of young rats, which was to calculate a grid 
score for each circular sample between 10 and 10 cm less than the width of 
the box, and use the maximum. Each method calculates different values of 
grid scores, but they are correlated (Langston et al. 2010). To calculate 
the significance of the grid score, the timing of the spikes is offset by 
random values (>20 s), and the resulting spike trains (and the semirandom 
positions of the animal at those spike times) are used to calculate a 
distribution of grid scores. Any grid score above the 95-percentile value 
of the grid scores from randomized spike trains is considered significant. 
Using the same method, we calculated a distribution of randomized grid 
scores with our simulated units for the Sargolini et al. (2006) peak-based 
grid score and the Langston et al. (2010) best radius-based grid scores and
found 95-percentile thresholds of 0.13 and 0.43, respectively.

Method based on that used by Langston et al. (2010) Development of the 
Spatial Representation System in the Rat. Rings are cut from the 
autocorrelation at different distances from the centre and the standard 
rotation and correlation is performed on each one. The highest of these 
grid scores is used, the radius of the ring is the grid spacing. A sine 
wave is fitted to the values in the ring and this is used to estimate the 
positions of the fields. The grid orientation is the angle from the centre 
to the first one of these fields, counter-clockwise. The grid field radius 
is taken as the radius of the centre field.
%}